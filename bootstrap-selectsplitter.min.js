+function($){"use strict";var SelectSplitter=function(element,options){this.init("selectsplitter",element,options)};SelectSplitter.DEFAULTS={template:'<div class="row" data-selectsplitter-wrapper-selector>'+'<div class="col-xs-12 col-sm-6">'+'<select class="form-control" data-selectsplitter-firstselect-selector></select>'+"</div>"+" \x3c!-- Add the extra clearfix for only the required viewport --\x3e"+'<div class="clearfix visible-xs-block"></div>'+'<div class="col-xs-12 col-sm-6">'+'<select class="form-control" data-selectsplitter-secondselect-selector></select>'+"</div>"+"</div>"};SelectSplitter.prototype.init=function(type,element,options){var self=this;self.type=type;self.$element=$(element);self.$element.hide();self.options=$.extend({},SelectSplitter.DEFAULTS,options);self.fullCategoryList={};var optgroupCount=0;var longestOptionCount=0;self.$element.find("optgroup").each(function(){self.fullCategoryList[$(this).attr("label")]={};var $that=$(this);var currentOptionCount=0;var temporaryFullCategoryList={};$(this).find("option").each(function(){var x=$(this).attr("value");var y=$(this).text();temporaryFullCategoryList[$(this).index()]={x:x,y:y};currentOptionCount++});if(currentOptionCount>longestOptionCount){longestOptionCount=currentOptionCount}self.fullCategoryList[$that.attr("label")]=temporaryFullCategoryList;optgroupCount++});var optionsHtml="";for(var key in self.fullCategoryList){if(self.fullCategoryList.hasOwnProperty(key)){optionsHtml=optionsHtml+"<option>"+key+"</option>"}}self.$element.after(self.options.template);self.$wrapper=self.$element.next("div[data-selectsplitter-wrapper-selector]");self.$firstSelect=$("select[data-selectsplitter-firstselect-selector]",self.$wrapper);self.$secondSelect=$("select[data-selectsplitter-secondselect-selector]",self.$wrapper);var selectSize=Math.max(optgroupCount,longestOptionCount,2);selectSize=Math.min(selectSize,10);self.$firstSelect.attr("size",selectSize);self.$secondSelect.attr("size",selectSize);self.$firstSelect.append(optionsHtml);self.$firstSelect.on("change",$.proxy(self.updateParentCategory,self));self.$secondSelect.on("change",$.proxy(self.updateChildCategory,self));self.$selectedOption="";self.currentParentCategory="";self.currentChildCategory="";if(self.$element.find("option[selected=selected]").length){self.$selectedOption=self.$element.find("option[selected=selected]");self.currentParentCategory=self.$selectedOption.closest("optgroup").attr("label");self.currentChildCategory=self.$selectedOption.attr("value");self.$firstSelect.val(self.currentParentCategory);self.$firstSelect.trigger("change")}};SelectSplitter.prototype.updateParentCategory=function(){var self=this;self.currentParentCategory=self.$firstSelect.val();self.$secondSelect.empty();var optionsHtml="";for(var key in self.fullCategoryList[self.currentParentCategory]){if(self.fullCategoryList[self.currentParentCategory].hasOwnProperty(key)){optionsHtml=optionsHtml+'<option value="'+self.fullCategoryList[self.currentParentCategory][key]["x"]+'">'+self.fullCategoryList[self.currentParentCategory][key]["y"]+"</option>"}}self.$secondSelect.append(optionsHtml);if(self.$selectedOption){self.$secondSelect.find('option[value="'+self.$selectedOption.attr("value")+'"]').attr("selected","selected")}};SelectSplitter.prototype.updateChildCategory=function(event){var self=this;self.currentChildCategory=$(event.target).val();self.$element.find("option[selected=selected]").removeAttr("selected");self.$element[0].value=self.currentChildCategory;self.$element.find('option[value="'+self.currentChildCategory+'"]').attr("selected","selected");self.$element.trigger("change");self.$selectedOption=self.$element.find("option[selected=selected]")};SelectSplitter.prototype.destroy=function(){var self=this;self.$wrapper.remove();self.$element.removeData(self.type);self.$element.show()};function Plugin(option){return this.each(function(){var $this=$(this);var data=$this.data("selectsplitter");var options=typeof option==="object"&&option;if(!data&&option==="destroy"){return}if(!data){$this.data("selectsplitter",data=new SelectSplitter(this,options))}if(typeof option=="string"){data[option]()}})}$.fn.selectsplitter=Plugin;$.fn.selectsplitter.Constructor=SelectSplitter}(jQuery);